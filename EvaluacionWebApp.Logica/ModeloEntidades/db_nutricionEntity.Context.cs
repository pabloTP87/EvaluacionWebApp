//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EvaluacionWebApp.Logica.ModeloEntidades
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class db_nutricionEntities : DbContext
    {
        public db_nutricionEntities()
            : base("name=db_nutricionEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Evaluaciones> Evaluaciones { get; set; }
        public virtual DbSet<Pacientes> Pacientes { get; set; }
        public virtual DbSet<Requerimientos> Requerimientos { get; set; }
        public virtual DbSet<Roles> Roles { get; set; }
        public virtual DbSet<Usuarios> Usuarios { get; set; }
    
        public virtual int LoginUsuario(string username, string password, ObjectParameter resultado)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LoginUsuario", usernameParameter, passwordParameter, resultado);
        }
    
        public virtual int RegistrarUsuario(string nombre, Nullable<int> rut, string apepat, string apemat, Nullable<System.DateTime> fecha_creacion, string login, string contraseña, Nullable<int> id_rol)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var rutParameter = rut.HasValue ?
                new ObjectParameter("rut", rut) :
                new ObjectParameter("rut", typeof(int));
    
            var apepatParameter = apepat != null ?
                new ObjectParameter("apepat", apepat) :
                new ObjectParameter("apepat", typeof(string));
    
            var apematParameter = apemat != null ?
                new ObjectParameter("apemat", apemat) :
                new ObjectParameter("apemat", typeof(string));
    
            var fecha_creacionParameter = fecha_creacion.HasValue ?
                new ObjectParameter("fecha_creacion", fecha_creacion) :
                new ObjectParameter("fecha_creacion", typeof(System.DateTime));
    
            var loginParameter = login != null ?
                new ObjectParameter("login", login) :
                new ObjectParameter("login", typeof(string));
    
            var contraseñaParameter = contraseña != null ?
                new ObjectParameter("contraseña", contraseña) :
                new ObjectParameter("contraseña", typeof(string));
    
            var id_rolParameter = id_rol.HasValue ?
                new ObjectParameter("id_rol", id_rol) :
                new ObjectParameter("id_rol", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrarUsuario", nombreParameter, rutParameter, apepatParameter, apematParameter, fecha_creacionParameter, loginParameter, contraseñaParameter, id_rolParameter);
        }
    }
}
